{"ts":1358286158018,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var GAT = GAT || {Models: {}, Views: {}, Collections: {}, Routers: {}};\r\nvar util = util || {};\r\n(function(app, util, $) {\r\n\t\r\n\t/**\r\n\t * Config\r\n\t */\r\n\tDEBUG = true;\r\n\t_.templateSettings.variable = \"data\";\r\n\tParse.initialize(\r\n\t\t\"mipDDGxaRmCMP6UiKKG423uRaHwJ98DA2MJjyqlo\" // app id\r\n\t\t,\"y2E1PVmBAjD3mqukUhxi8F5vk5JMIfOHMJwLc7X7\" // javascript key\r\n\t);\r\n\r\n\tapp.Views.LoginView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\", \"onSubmit\");\r\n\t\t\tthis.template = $(\"#tmpl-login\").html();\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,events: {\r\n\t\t\t\"submit form\": \"onSubmit\"\r\n\t\t}\r\n\t\t,onSubmit: function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tvar username = this.$(\"[name='username']\").val()\r\n\t\t\t\t,password = this.$(\"[name='password']\").val();\r\n\t\t\tif(username && password) {\r\n\t\t\t\tutil.loading(true);\r\n\t\t\t\tParse.User.logIn(username, password, {\r\n\t\t\t\t\tsuccess: function(user) {\r\n\t\t\t\t\t\tutil.loading(false);\r\n\t\t\t\t\t\tutil.navigate(\"\", \"left\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,error: function(user, error) {\r\n\t\t\t\t\t\tutil.loading(false);\r\n\t\t\t\t\t\talert(\"Invalid login\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tapp.Views.HomeView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\");\r\n\t\t\tthis.template = _.template($(\"#tmpl-home\").html());\r\n\t\t\tapp.myOrders.on(\"change:numRecords\", this.render);\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template({count: app.myOrders.numRecords || \"?\"}));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,events: {\r\n\t\t\t\"click .logout\": \"logout\"\r\n\t\t}\r\n\t\t,logout: function(e) {\r\n\t\t\t//e.preventDefault();\r\n\t\t\tParse.User.logOut();\r\n\t\t\t//util.navigate(\"login\", \"right\");\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.Models.Image = Backbone.Model.extend({\r\n\t\tdefaults: {\r\n\t\t\turl: \"http://api.imgur.com/2/upload.json\"\r\n\t\t\t,key: \"17ddcab1bc7de79688829dd46696cb44\"\r\n\t\t}\r\n\t\t,sync: function(method, model, options) {\r\n\t\t\tvar fd = new FormData()\r\n\t\t\t\t,xhr = new XMLHttpRequest();\r\n\t\t\tfd.append(\"image\", model.get(\"image\"));\r\n\t\t\tfd.append(\"key\", model.get(\"key\"));\r\n\t\t\txhr.open(\"POST\", model.get(\"url\"));\r\n\t\t\txhr.onload = function() {\r\n\t\t\t\toptions.success(JSON.parse(xhr.responseText));\r\n\t\t\t\tif(model.collection) model.collection.trigger(\"uploaded\");\r\n\t\t\t}\r\n\t\t\txhr.onerror = function() {\r\n\t\t\t\toptions.error(JSON.parse(xhr.responseText));\r\n\t\t\t}\r\n\t\t\t// Track progress\r\n\t\t\tvar eventSource = xhr.upload || xhr\r\n\t\t\t\t,self = this;\r\n\t\t\teventSource.addEventListener(\"progress\", function(e) {\r\n\t\t\t\tvar loaded = e.position || e.loaded\r\n\t\t\t\t\t,total = e.totalSize || e.total\r\n\t\t\t\t\t,percentage = Math.round(loaded * 100 / total);\r\n\t\t\t\tself.set(\"percentage\", percentage);\r\n\t\t\t\tif(DEBUG) console.log(percentage + \"%\");\r\n\t\t\t});\r\n\t\t\txhr.send(fd);\r\n\t\t}\r\n\t\t,parse: function(response) {\r\n\t\t\tthis.set(\"hash\", response.upload.image.hash);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.Collections.Images = Backbone.Collection.extend({model: app.Models.Image});\r\n\t\r\n\t// TODO: Add ImageView that monitors change:progress on each image to update progress bar\r\n\t// but how do I submit the order when they're all complete?\r\n\t\r\n\tapp.Models.Order = Parse.Object.extend(\"Order\");\r\n\t\r\n\tapp.Collections.Orders = Parse.Collection.extend({\r\n\t\tmodel: app.Models.Order\r\n\t\t,initialize: function(models, options) {\r\n\t\t\t_.bindAll(this, \"getNumRecords\");\r\n\t\t\tthis.limit = options && options.limit ? options.limit : 5; // default limit\r\n\t\t\tthis.skip = options && options.skip ? options.skip : 0;\r\n\t\t\tif(this.limit) this.query.limit(this.limit);\r\n\t\t}\r\n\t\t,query: new Parse.Query(app.Models.Order)\r\n\t\t,getNumRecords: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.query.count({\r\n\t\t\t\tsuccess: function(count) {\r\n\t\t\t\t\tself.numRecords = count;\r\n\t\t\t\t\tself.trigger(\"change:numRecords\");\r\n\t\t\t\t}\r\n\t\t\t\t,error: function(error) {\r\n\t\t\t\t\tif(DEBUG) console.log(\"Error Counting\", error);\r\n\t\t\t\t\tself.numRecords = undefined;\r\n\t\t\t\t\tself.trigger(\"change:numRecords\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t,nextPage: function() {\r\n\t\t\tthis.skip += this.limit;\r\n\t\t\tthis.query.skip(this.skip);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.Collections.MyOrders = app.Collections.Orders.extend({\r\n\t\tquery: (new Parse.Query(app.Models.Order)).equalTo(\"user\", Parse.User.current()).descending(\"createdAt\")\r\n\t});\r\n\t\r\n\tapp.Views.MyOrdersView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\", \"onClickMore\", \"onClickPrev\");\r\n\t\t\tthis.template = _.template($(\"#tmpl-my-orders\").html());\r\n\t\t\tthis.collection.on(\"reset\", this.render);\r\n\t\t\tthis.collection.on(\"add\", this.render);\r\n\t\t\tthis.collection.on(\"change:numRecords\", this.render);\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template({orders: this.collection.toJSON(), numRecords: this.collection.numRecords || 0}));\r\n\t\t\tthis.$(\"abbr.timeago\").timeago();\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,events: {\r\n\t\t\t\"click .more\": \"onClickMore\"\r\n\t\t\t//,\"click .button-prev\": \"onClickPrev\"\r\n\t\t}\r\n\t\t,onClickMore: function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.collection.nextPage().fetch({add: true});\r\n\t\t}\r\n\t\t,onClickPrev: function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tutil.navigate(\"\", \"right\");\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.Views.OrderView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\", \"onClickPrev\");\r\n\t\t\tthis.template = _.template($(\"#tmpl-view-order\").html());\r\n\t\t\tthis.model.on(\"change\", this.render);\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template(this.model.toJSON()));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,events: {\r\n\t\t\t//\"click .button-prev\": \"onClickPrev\"\r\n\t\t}\r\n\t\t,onClickPrev: function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tutil.navigate(\"my\", \"right\"); // should go to home screen if newly created item\r\n\t\t}\r\n\t});\r\n\r\n\tapp.Views.NewOrderView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"onAddFile\", \"onClickPrev\", \"onClickNext\");\r\n\t\t\tthis.template = _.template($(\"#tmpl-new-order\").html());\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template(this.model.toJSON()));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,events: {\r\n\t\t\t\"click .button-prev\": \"onClickPrev\"\r\n\t\t\t,\"click .button-next\": \"onClickNext\"\r\n\t\t\t,\"change input[type='file']\": \"onAddFile\"\r\n\t\t\t// remove image button\r\n\t\t}\r\n\t\t,onAddFile: function(e) { // TODO: What if they change the file?\r\n\t\t\tvar newOrder = this.model;\r\n\t\t\tthis.options.images.create(new app.Models.Image({image: e.target.files[0]}), {\r\n\t\t\t\tsuccess: function(image) {\r\n\t\t\t\t\tconsole.log(\"Uploaded image\", image);\r\n\t\t\t\t\tvar currentPhotos = newOrder.get(\"photos\") || [];\r\n\t\t\t\t\tnewOrder.set(\"photos\", currentPhotos.push(image.get(\"hash\"))); // TODO\r\n\t\t\t\t\tif( ! newOrder.isNew()) newOrder.save(null, {patch: true}); // If order has already been saved, update it to have this photo\r\n\t\t\t\t}// TODO: error handling?\r\n\t\t\t});\r\n\t\t}\r\n\t\t,onClickPrev: function(e) {\r\n\t\t\tthis.model.clear(); // Clear the model since we're essentially cancelling the order\r\n\t\t}\r\n\t\t,onClickNext: function(e) {\r\n\t\t\tvar formData = util.serializeObject(this.$(\"form\"));\r\n\t\t\tdelete formData.photo;\r\n\t\t\tthis.model.set(formData);\r\n\t\t\tvar order = this.model;\r\n\t\t\tthis.options.images.each(function(image) {\r\n\t\t\t\timage.save(null, {\r\n\t\t\t\t\tsuccess: function(model) {\r\n\t\t\t\t\t\tconsole.log(\"Success\", model);\r\n\t\t\t\t\t\tvar currentPhotos = order.get(\"photos\")\r\n\t\t\t\t\t\t\t,hash = model.get(\"hash\");\r\n\t\t\t\t\t\torder.set(\"photos\", currentPhotos ? currentPhotos.push(hash) : [hash]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tapp.Views.AddressView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\", \"onUserInput\", \"onKeyPress\", \"onAddressChanged\", \"onCoordsChanged\", \"onLoading\", \"onClickSubmit\", \"onClickPrev\");\r\n\t\t\tthis.template = $(\"#tmpl-address\").html();\r\n\t\t\tthis.options.mapView.on(\"mapmoved\", this.options.geocoder.reverseGeocode);\r\n\t\t\tthis.options.geocoder.on(\"change:address\", this.onAddressChanged);\r\n\t\t\tthis.options.geocoder.on(\"loading:start\", this.onLoading, true);\r\n\t\t\tthis.options.geocoder.on(\"loading:end\", this.onLoading, false);\r\n\t\t\tthis.options.geocoder.on(\"coordschanged\", this.options.mapView.panTo); // Can I watch change:coords instead?\r\n\t\t\tthis.options.geocoder.on(\"change:coords\", this.onCoordsChanged);\r\n\t\t\tthis.waiting = {};\r\n\t\t\tif(DEBUG) console.log(this.model.toJSON());\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template);\r\n\t\t\tthis.$(\".map-container\").prepend(this.options.mapView.el);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,events: {\r\n\t\t\t\"change .address\": \"onUserInput\"\r\n\t\t\t//,\"keypress .address\": \"onKeyPress\"\r\n\t\t\t,\"click .submit\": \"onClickSubmit\"\r\n\t\t\t,\"submit form\": \"onUserInput\" // Called if user hits enter on the address <input>\r\n\t\t}\r\n\t\t,onUserInput: function(e) {\r\n\t\t\tvar input = this.$(\".address\").val();\r\n\t\t\tif(input) this.options.geocoder.geocode(input);\r\n\t\t}\r\n\t\t/*,onKeyPress: function(e) {\r\n\t\t\tif(e.keyCode === 13) this.onUserInput();\r\n\t\t}*/\r\n\t\t,onAddressChanged: function(geocoder) {\r\n\t\t\tthis.$(\".address\").val(geocoder.get(\"address\")); // Does this come through a param?\r\n\t\t}\r\n\t\t,onCoordsChanged: function(geocoder) {\r\n\t\t\tthis.$(\"[name='latitude']\").val(geocoder.get(\"coords\").lat);\r\n\t\t\tthis.$(\"[name='longitude']\").val(geocoder.get(\"coords\").lng);\r\n\t\t}\r\n\t\t,onLoading: function(set) {\r\n\t\t\tthis.$(\".address\").toggleClass(\"loading\", set);\r\n\t\t}\r\n\t\t,onClickSubmit: function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tvar formData = util.serializeObject(this.$(\"form\"))\r\n\t\t\t\t,newOrder = this.model;\r\n\t\t\t\t\r\n\t\t\tnewOrder.set(formData); // Save address & lat/lng\r\n\t\t\tnewOrder.set(\"user\", Parse.User.current()); // Add user info to order\r\n\t\t\tif(DEBUG) console.log(newOrder.toJSON());\r\n\t\t\tutil.loading(true); // Show loading indicator\r\n\t\t\t\r\n\t\t\t// Add newOrder to collection & push it to server via .create()\r\n\t\t\tapp.myOrders.create(newOrder, {\r\n\t\t\t\tsuccess: function(model) {\r\n\t\t\t\t\tif(DEBUG) console.log(\"Created order successfully\", model);\r\n\t\t\t\t\tutil.loading(false); // Hide loading indicator\t\t\t\t\t\r\n\t\t\t\t\t// TODO: clear the new order so we can create a fresh one\t\t\t\t\t\r\n\t\t\t\t\tutil.navigate(\"view/\" + model.id, \"left\"); // Navigate to the newly created order\r\n\t\t\t\t}\r\n\t\t\t\t,error: function(model, error) {\r\n\t\t\t\t\tutil.loading(false);\r\n\t\t\t\t\talert(\"Error saving\");\r\n\t\t\t\t\tif(DEBUG) console.log(\"Error Saving\", error, model);\r\n\t\t\t\t}\r\n\t\t\t\t,wait: true\r\n\t\t\t});\r\n\t\t}\r\n\t\t//,onSubmit: function(e) { e.preventDefault(); } // Don't submit form if the user hits enter on the address <input>\r\n\t});\r\n\r\n\tapp.Views.UploadView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\", \"onUploaded\");\r\n\t\t\tthis.template = _.template($(\"#tmpl-upload\").html());\r\n\t\t\tapp.images.on(\"uploaded\", this.onUploaded);\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template({images: app.images}));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,onUploaded: function() {\r\n\t\t\t//if(app.images.pluck(\"hash\").indexOf(undefined) === -1)\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.Routers.AppRouter = Jr.Router.extend({\r\n\t\troutes: {\r\n\t\t\t\"\": \"home\"\r\n\t\t\t,\"login\": \"login\"\r\n\t\t\t,\"new\": \"newOrder\"\r\n\t\t\t,\"address\": \"address\"\r\n\t\t\t,\"upload\": \"upload\"\r\n\t\t\t,\"my\": \"myOrders\"\r\n\t\t\t,\"view/:id\": \"viewOrder\"\r\n\t\t\t,\"*path\": \"defaultRoute\"\r\n\t\t}\r\n\t\t,initialize: function() {\r\n\t\t\tapp.myOrders = app.myOrders || new app.Collections.MyOrders();\r\n\t\t}\r\n\t\t,before: {\r\n\t\t\t// Ensure user is logged in for every page except 'login'\r\n\t\t\t\"[^login]\": function() {\r\n\t\t\t\tif( ! Parse.User.current()) {\r\n\t\t\t\t\tthis.navigate(\"login\", {trigger: true, replace: true});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t,\"address\": function() {\r\n\t\t\t\tif( ! app.newOrder) {\r\n\t\t\t\t\tthis.navigate(\"new\", {trigger: true, replace: true});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t,\"upload\": function() {\r\n\t\t\t\tif( ! app.newOrder || ! app.images.length) {\r\n\t\t\t\t\tthis.navigate(\"new\", {trigger: true, replace: true});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t,home: function() {\r\n\t\t\tif(app.myOrders.numRecords === undefined) app.myOrders.getNumRecords();\r\n\t\t\tapp.homeView = app.homeView || new app.Views.HomeView({});\r\n\t\t\tthis.renderView(app.homeView);\r\n\t\t}\r\n\t\t,login: function() {\r\n\t\t\tapp.loginView = app.loginView || new app.Views.LoginView();\r\n\t\t\tthis.renderView(app.loginView);\r\n\t\t}\r\n\t\t,newOrder: function() {\r\n\t\t\tvar images = new app.Collections.Images();\r\n\t\t\tapp.newOrder = app.newOrder || new app.Models.Order();\r\n\t\t\tapp.newOrderView = app.newOrderView || new app.Views.NewOrderView({\r\n\t\t\t\tmodel: app.newOrder\r\n\t\t\t\t,images: images\r\n\t\t\t});\r\n\t\t\tthis.renderView(app.newOrderView);\r\n\t\t}\r\n\t\t,address: function() {\r\n\t\t\tapp.geocoder = app.geocoder || new app.Models.Geocoder();\r\n\t\t\tapp.addressView = app.addressView || new app.Views.AddressView({\r\n\t\t\t\tmapView: app.mapView\r\n\t\t\t\t,geocoder: app.geocoder\r\n\t\t\t\t,model: app.newOrder\r\n\t\t\t});\r\n\t\t\tthis.renderView(app.addressView); // TODO: If you view this page, then leave, then come back, address is erased\r\n\t\t\tapp.mapView.render(); // Must be done after element is created in DOM\r\n\t\t}\r\n\t\t,upload: function() {\r\n\t\t\tapp.uploadView = app.uploadView || new app.Views.UploadView();\r\n\t\t\tthis.renderView(app.uploadView);\r\n\t\t}\r\n\t\t,myOrders: function() {\r\n\t\t\tif(app.myOrders.numRecords === undefined) app.myOrders.getNumRecords();\r\n\t\t\tif( ! app.myOrders.length) app.myOrders.fetch();\r\n\t\t\tapp.myOrdersView = app.myOrdersView || new app.Views.MyOrdersView({collection: app.myOrders});\r\n\t\t\tthis.renderView(app.myOrdersView);\r\n\t\t}\r\n\t\t,viewOrder: function(id) {\r\n\t\t\tvar order;\r\n\t\t\tif((order = app.myOrders.get(id))) {\r\n\t\t\t\tapp.orderView = new app.Views.OrderView({model: order});\r\n\t\t\t\tthis.renderView(app.orderView);\r\n\t\t\t} else {\r\n\t\t\t\tthis.navigate(\"\", {trigger: true, replace: true});\r\n\t\t\t}\r\n\t\t}\r\n\t\t,defaultRoute: function(path) {\r\n\t\t\tconsole.log(\"Error 404\"); // TODO\r\n\t\t}\r\n\t});\r\n\t\r\n\t$(document).ready(function() {\r\n\t\tapp.router = new app.Routers.AppRouter();\r\n\t\tBackbone.history.start();\r\n\t\t$(\"body\").css(\"min-height\", $(window).height()+60); // Remove address bar\r\n\t});\r\n\t\r\n\t/**\r\n\t * Add animations to <a> that have data-anim set\r\n\t * Idea from Tim Branyen's backbone-boilerplate\r\n\t * https://github.com/tbranyen/backbone-boilerplate/blob/master/app/main.js#L22\r\n\t */\r\n\t/*$(document).on(Modernizr.touch ? \"touchend\" : \"click\", \"a[data-anim]\", function(evt) {\r\n\t\tvar href = $(this).attr(\"href\")\r\n\t\t\t,anim = $(this).attr(\"data-anim\");\r\n\t\tif(href.substr(0, 1) === \"#\") {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tvar opts = {trigger: true};\r\n\t\t\tJr.Navigator.navigate(href || \"\", {\r\n\t\t\t\ttrigger: true\r\n\t\t\t\t,animation: {\r\n\t\t\t\t\ttype: Jr.Navigator.animations.SLIDE_STACK\r\n\t\t\t\t\t,direction: anim == \"right\" ? Jr.Navigator.directions.RIGHT : Jr.Navigator.directions.LEFT\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tconsole.log(\"Anim \" + anim);\r\n\t\t}\r\n\t});*/\r\n\t\r\n\t/**\r\n\t * Executed Immediately\r\n\t */\r\n\tapp.mapView = new app.Views.MapView(); // So it will start locating\r\n})(GAT, util, Zepto);"]],"start1":0,"start2":0,"length1":0,"length2":14396}]],"length":14396}
{"contributors":[],"silentsave":false,"ts":1358286349674,"patch":[[{"diffs":[[0,", $) {\r\n"],[-1,"\t"],[1,"    "],[0,"\r\n\t/**\r\n"]],"start1":116,"start2":116,"length1":17,"length2":20},{"diffs":[[0,"odels.Im"],[-1,"age"],[1,"gur"],[0," = Backb"]],"start1":1664,"start2":1664,"length1":19,"length2":19},{"diffs":[[0,"l: \"http"],[1,"s"],[0,"://api.i"]],"start1":1723,"start2":1723,"length1":16,"length2":17},{"diffs":[[0,"gur.com/"],[-1,"2"],[1,"3"],[0,"/upload."]],"start1":1741,"start2":1741,"length1":17,"length2":17},{"diffs":[[0,"on\"\r\n\t\t\t"],[1,"//"],[0,",key: \"1"]],"start1":1760,"start2":1760,"length1":16,"length2":18},{"diffs":[[0,"696cb44\""],[1," // api v2\r\n\t\t\t,key: \"0dc8fbf0e30c756\""],[0,"\r\n\t\t}\r\n\t"]],"start1":1802,"start2":1802,"length1":16,"length2":54},{"diffs":[[0,"\n\t\t\t"],[-1,"var fd = new FormData()\r\n\t\t\t\t,xhr = new XMLHttpRequest"],[1,"if(method === \"create\") {\r\n\t\t\t\tvar fd = new FormData"],[0,"();\r\n"],[1,"\t"],[0,"\t\t\tf"]],"start1":1899,"start2":1899,"length1":67,"length2":66},{"diffs":[[0,"\n\t\t\t"],[-1,"fd.append(\"key\", "],[1,"\tconsole.log("],[0,"mode"]],"start1":2004,"start2":2004,"length1":25,"length2":21},{"diffs":[[0,"el.get(\""],[-1,"key"],[1,"image"],[0,"\"));\r\n\t\t"]],"start1":2024,"start2":2024,"length1":19,"length2":21},{"diffs":[[0,"\n\t\t\t"],[-1,"xhr.open(\"POST\", model.get(\"url\"));\r\n\t\t\txhr.onload ="],[1,"\t$.ajax({\r\n\t\t\t\t\turl: model.get(\"url\")\r\n\t\t\t\t\t,data: fd\r\n\t\t\t\t\t,processData: false\r\n\t\t\t\t\t,contentType: false\r\n\t\t\t\t\t,headers: {\"Authorization\": \"Client-ID \" + model.get(\"key\")}\r\n\t\t\t\t\t,type: \"POST\"\r\n\t\t\t\t\t,success:"],[0," fun"]],"start1":2042,"start2":2042,"length1":60,"length2":216},{"diffs":[[0,"ccess: function("],[1,"response"],[0,") {\r\n\t\t\t\toptions"]],"start1":2248,"start2":2248,"length1":32,"length2":40},{"diffs":[[0,"\t\t\t\t"],[-1,"options.success(JSON.parse(xhr."],[1,"\t\tif(DEBUG) console.log(\"Imgur Response\", "],[0,"response"],[-1,"Text)"],[0,");\r\n\t\t\t\t"],[1,"\t\t"],[0,"if("],[-1,"model.collection) model.collection.trigger(\"uploaded\""],[1,"response.success) options.success(response);\r\n\t\t\t\t\t\telse options.error(response"],[0,");\r\n"],[1,"\t\t"],[0,"\t\t\t}"]],"start1":2277,"start2":2277,"length1":120,"length2":156},{"diffs":[[0,"\n\t\t\t"],[-1,"xhr.onerror = function() {\r\n\t\t\t\toptions.error(JSON.parse(xhr.responseText));\r\n\t\t\t}\r\n\t\t\t// Track progress\r\n\t\t\tvar eventSource = xhr.upload || xhr\r\n\t\t\t\t,self = this;\r\n\t\t\teventSource.addEventListener(\"progress\", function(e) {\r\n\t\t\t\tvar loaded = e.position || e.loaded\r\n\t\t\t\t\t,total = e.totalSize || e.total\r\n\t\t\t\t\t,percentage = Math.round(loaded * 100 / total);\r\n\t\t\t\tself.set(\"percentage\", percentage);\r\n\t\t\t\tif(DEBUG) console.log(percentage + \"%\");"],[1,"\t\t,error: options.error\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t,parse: function(response) {\r\n\t\t\tthis.set(\"link\", response.data.link);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.Models.ParseFile = Backbone.Model.extend({\r\n\t\tdefaults: {\r\n\t\t\turl: \"https://api.parse.com/1/files/\"\r\n\t\t\t,key: \"qN54fHJiUrc42nnIOPKq60BAWhWISgABQMylC5Nw\"\r\n\t\t}\r\n\t\t,sync: function(method, model, options) {\r\n\t\t\tif(method === \"create\") {\r\n\t\t\t\tvar file = model.get(\"image\");\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: model.get(\"url\") + file.name\r\n\t\t\t\t\t,data: file\r\n\t\t\t\t\t,processData: false\r\n\t\t\t\t\t,contentType: false\r\n\t\t\t\t\t,headers: {\r\n\t\t\t\t\t\t\"X-Parse-Application-Id\": Parse.applicationId\r\n\t\t\t\t\t\t,\"X-Parse-REST-API-Key\": model.get(\"key\")\r\n\t\t\t\t\t\t,\"Content-Type\": file.type\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,type: \"POST\"\r\n\t\t\t\t\t,success: options.success\r\n\t\t\t\t\t,error: options.error"],[0,"\r\n"],[1,"\t"],[0,"\t\t\t}"]],"start1":2434,"start2":2434,"length1":452,"length2":800},{"diffs":[[0,"\n\t\t\t"],[-1,"xhr.send(fd);"],[1,"}"],[0,"\r\n\t\t"]],"start1":3237,"start2":3237,"length1":21,"length2":9},{"diffs":[[0,"is.set(\""],[-1,"hash"],[1,"link"],[0,"\", respo"]],"start1":3286,"start2":3286,"length1":20,"length2":20},{"diffs":[[0,"se.u"],[-1,"pload.image.hash"],[1,"rl"],[0,");\r\n"]],"start1":3307,"start2":3307,"length1":24,"length2":10},{"diffs":[[0,"s.Im"],[-1,"age"],[1,"gur"],[0,"});\r\n\t"],[-1,"\r\n\t// TODO: Add ImageView that monitors change:progress on each image to update progress bar\r\n\t// but how do I submit the order when they're all complete?\r\n"],[0,"\t\r\n\t"]],"start1":3418,"start2":3418,"length1":173,"length2":17},{"diffs":[[0,"kip "],[-1,"+"],[0,"= this."],[-1,"limit;"],[1,"models.length; // This probably wouldn't work if it weren't descending order because models can be added"],[0,"\r\n\t\t"]],"start1":4293,"start2":4293,"length1":22,"length2":119},{"diffs":[[0,".on(\"add\", this."],[-1,"render"],[1,"onAdd, this"],[0,");\r\n\t\t\tthis.coll"]],"start1":4909,"start2":4909,"length1":38,"length2":43},{"diffs":[[0,".render);\r\n\t\t}\r\n"],[1,"\t\t,onAdd: function() { console.log(\"onAdd()\"); this.render(); }\r\n"],[0,"\t\t,render: funct"]],"start1":4987,"start2":4987,"length1":32,"length2":97},{"diffs":[[0,"ews.NewOrder"],[1,"Details"],[0,"View = Jr.Vi"]],"start1":6121,"start2":6121,"length1":24,"length2":31},{"diffs":[[0,"le\","],[-1," \"onClickPrev\","],[0," \"on"]],"start1":6220,"start2":6220,"length1":23,"length2":8},{"diffs":[[0,"ton-"],[-1,"prev\": \"onClickPrev\"\r\n\t\t\t,\"click .button-"],[1,""],[0,"next"]],"start1":6438,"start2":6438,"length1":49,"length2":8},{"diffs":[[0,"odels.Im"],[-1,"age"],[1,"gur"],[0,"({image:"]],"start1":6680,"start2":6680,"length1":19,"length2":19},{"diffs":[[0,"|| [];\r\n"],[1,"\t\t\t\t\tcurrentPhotos.push(image.get(\"link\"));\r\n"],[0,"\t\t\t\t\tnew"]],"start1":6848,"start2":6848,"length1":16,"length2":61},{"diffs":[[0,"otos"],[-1,".push(image.get(\"hash\"))); // TODO"],[1,");"],[0,"\r\n\t\t"]],"start1":6938,"start2":6938,"length1":42,"length2":10},{"diffs":[[0,"\n\t\t}\r\n\t\t,onClick"],[-1,"Prev"],[1,"Next"],[0,": function(e) {\r"]],"start1":7115,"start2":7115,"length1":36,"length2":36},{"diffs":[[0," {\r\n"],[-1,"\t\t\tthis.model.clear(); // Clear the model since we're essentially cancelling the order\r\n\t\t}\r\n\t\t,onClickNext: function(e) {\r\n\t\t\tvar formData = util.serializeObject(this.$(\"form\"));\r\n\t\t\tdelete formData.photo;\r\n\t\t\tthis.model.set(formData);\r\n\t\t\tvar order = this.model;\r\n\t\t\tthis.options.images.each(function(image) {\r\n\t\t\t\timage.save(null, {\r\n\t\t\t\t\tsuccess: function(model) {\r\n\t\t\t\t\t\tconsole.log(\"Success\", model);\r\n\t\t\t\t\t\tvar currentPhotos = order.get(\"photos\")\r\n\t\t\t\t\t\t\t,hash = model.get(\"hash\");\r\n\t\t\t\t\t\torder.set(\"photos\", currentPhotos ? currentPhotos.push(hash) : [hash]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}"],[1,"            e.preventDefault();\r\n\t\t\tvar formData = util.serializeObject(this.$(\"form\"));\r\n\t\t\tdelete formData.photo;\r\n\t\t\tthis.model.set(formData);\r\n            app.router.newOrderAddress("],[0,");\r\n"]],"start1":7148,"start2":7148,"length1":598,"length2":194},{"diffs":[[0,";\r\n\r\n\tapp.Views."],[1,"NewOrder"],[0,"AddressView = Jr"]],"start1":7350,"start2":7350,"length1":32,"length2":40},{"diffs":[[0," \"on"],[-1,"UserInput\", \"onKeyPress"],[1,"ClickPrev\", \"onUserInput"],[0,"\", \""]],"start1":7462,"start2":7462,"length1":31,"length2":32},{"diffs":[[0,"Submit\", \"on"],[-1,"ClickPrev"],[1,"PressEnter"],[0,"\");\r\n\t\t\tthis"]],"start1":7553,"start2":7553,"length1":33,"length2":34},{"diffs":[[0,"this.template = "],[1,"_.template("],[0,"$(\"#tmpl-address"]],"start1":7583,"start2":7583,"length1":32,"length2":43},{"diffs":[[0,"ess\").html()"],[1,")"],[0,";\r\n\t\t\tthis.o"]],"start1":7623,"start2":7623,"length1":24,"length2":25},{"diffs":[[0,"anged);\r\n\t\t\t"],[1,"//"],[0,"this.waiting"]],"start1":8099,"start2":8099,"length1":24,"length2":26},{"diffs":[[0,"g = {};\r\n\t\t\t"],[1,"//"],[0,"if(DEBUG) co"]],"start1":8124,"start2":8124,"length1":24,"length2":26},{"diffs":[[0,"his.template"],[1,"(this.model.toJSON())"],[0,");\r\n\t\t\tthis."]],"start1":8231,"start2":8231,"length1":24,"length2":45},{"diffs":[[0,"mapView.el);"],[1," // TODO: Not reusable"],[0,"\r\n\t\t\treturn "]],"start1":8317,"start2":8317,"length1":24,"length2":46},{"diffs":[[0," {\r\n"],[-1,"\t\t\t\"change .address\": \"onUserInput\"\r\n\t\t\t//,\"keypress"],[1,"            \"click .button-prev\": \"onClickPrev\"\r\n\t\t\t,\"change"],[0," .ad"]],"start1":8385,"start2":8385,"length1":60,"length2":68},{"diffs":[[0,"ss\": \"on"],[-1,"KeyPress"],[1,"UserInput"],[0,"\"\r\n\t\t\t,\""]],"start1":8456,"start2":8456,"length1":24,"length2":25},{"diffs":[[0,"rm\": \"on"],[-1,"UserInput"],[1,"PressEnter"],[0,"\" // Cal"]],"start1":8528,"start2":8528,"length1":25,"length2":26},{"diffs":[[0,"nput>\r\n\t\t}\r\n"],[1,"        ,onClickPrev: function(e) {\r\n            e.preventDefault();\r\n            this.saveForm(); // Save address/lat/lng to model\r\n            app.router.newOrderDetails();\r\n        }\r\n"],[0,"\t\t,onUserInp"]],"start1":8594,"start2":8594,"length1":24,"length2":211},{"diffs":[[0,"\t}\r\n"],[-1,"\t\t/*,onKeyPress: function(e) {\r\n\t\t\tif(e.keyCode === 13) this.onUserInput();\r\n\t\t}*/\r\n"],[0,"\t\t,o"]],"start1":8919,"start2":8919,"length1":92,"length2":8},{"diffs":[[0,"\t}\r\n"],[-1,"\t\t,onClickSubmit"],[1,"        ,saveForm"],[0,": fu"]],"start1":9321,"start2":9321,"length1":24,"length2":25},{"diffs":[[0,"ion("],[-1,"e"],[0,") {\r\n"],[-1,"\t\t\te.preventDefault();\r\n\t\t\t"],[1,"            "],[0,"var "]],"start1":9349,"start2":9349,"length1":41,"length2":25},{"diffs":[[0,"m\"))"],[1,";"],[0,"\r\n"],[-1,"\t\t\t\t,newOrder = this.model;\r\n\t\t\t\t\r\n\t\t\tnewOrder.set(formData); // Save address & lat/lng\r\n\t\t\tnewOrder.set(\"user\", Parse.User.current"],[1,"            this.model.set(formData);\r\n        }\r\n\t\t,onClickSubmit: function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.saveForm"],[0,"()"],[-1,")"],[0,"; // "],[-1,"Add user info"],[1,"Save address/lat/lng"],[0," to "],[1,"m"],[0,"o"],[-1,"r"],[0,"de"],[-1,"r"],[1,"l"],[0,"\r\n\t\t"]],"start1":9417,"start2":9417,"length1":171,"length2":170},{"diffs":[[0,"ole.log("],[-1,"newOrder"],[1,"this.model"],[0,".toJSON("]],"start1":9602,"start2":9602,"length1":24,"length2":26},{"diffs":[[0,"\t// Add "],[-1,"newOrder"],[1,"this.model"],[0," to coll"]],"start1":9690,"start2":9690,"length1":24,"length2":26},{"diffs":[[0,".create("],[-1,"newOrder"],[1,"this.model"],[0,", {\r\n\t\t\t"]],"start1":9773,"start2":9773,"length1":24,"length2":26},{"diffs":[[0,"\r\n\t\t"],[-1,"//"],[0,",on"],[-1,"Submit"],[1,"PressEnter"],[0,": fu"]],"start1":10304,"start2":10304,"length1":19,"length2":21},{"diffs":[[0,"ion(e) {"],[-1," "],[1,"\r\n\t\t\t"],[0,"e.preven"]],"start1":10328,"start2":10328,"length1":17,"length2":21},{"diffs":[[0,"fault();"],[-1," }"],[0," // Don'"]],"start1":10352,"start2":10352,"length1":18,"length2":16},{"diffs":[[0,">\r\n\t"],[-1,"});\r\n\r\n\tapp.Views.UploadView = Jr.View.extend({\r\n\t\tinitialize: function() {\r\n\t\t\t_.bindAll(this, \"render\", \"onUploaded\");\r\n\t\t\tthis.template = _.template($(\"#tmpl-upload\").html());\r\n\t\t\tapp.images.on(\"uploaded\", this.onUploaded);\r\n\t\t}\r\n\t\t,render: function() {\r\n\t\t\tthis.$el.html(this.template({images: app.images}));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t,onUploaded: function() {\r\n\t\t\t//if(app.images.pluck(\"hash\").indexOf(undefined) === -1)"],[1,"\t\tthis.onUserInput();"],[0,"\r\n\t\t"]],"start1":10426,"start2":10426,"length1":432,"length2":29},{"diffs":[[0,"r\"\r\n"],[-1,"\t\t\t,\"address\": \"address\"\r\n\t\t\t,\"upload\": \"upload\"\r\n"],[0,"\t\t\t,"]],"start1":10581,"start2":10581,"length1":58,"length2":8},{"diffs":[[0,"yOrders();\r\n"],[1,"\t\t\tapp.mapView = new app.Views.MapView(); // So it will start locating\r\n"],[0,"\t\t}\r\n\t\t,befo"]],"start1":10754,"start2":10754,"length1":24,"length2":96},{"diffs":[[0,"\t\t\t\""],[-1,"["],[0,"^"],[1,"(?!"],[0,"login"],[-1,"]"],[1,"$).*"],[0,"\": f"]],"start1":10919,"start2":10919,"length1":16,"length2":21},{"diffs":[[0,"\t}\r\n"],[-1,"\t\t\t,\"address\": function() {\r\n\t\t\t\tif( ! app.newOrder) {\r\n\t\t\t\t\tthis.navigate(\"new\", {trigger: true, replace: true});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t,\"upload\": function() {\r\n\t\t\t\tif( ! app.newOrder || ! app.images.length) {\r\n\t\t\t\t\tthis.navigate(\"new\", {trigger: true, replace: true});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n"],[0,"\t\t}\r"]],"start1":11079,"start2":11079,"length1":328,"length2":8},{"diffs":[[0,"w({});\r\n\t\t\tthis."],[-1,"render"],[1,"show"],[0,"View(app.homeVie"]],"start1":11242,"start2":11242,"length1":38,"length2":36},{"diffs":[[0,"iew();\r\n\t\t\tthis."],[-1,"render"],[1,"show"],[0,"View(app.loginVi"]],"start1":11368,"start2":11368,"length1":38,"length2":36},{"diffs":[[0,";\r\n\t\t}\r\n"],[-1,"\t\t"],[1,"        "],[0,",newOrde"]],"start1":11407,"start2":11407,"length1":18,"length2":24},{"diffs":[[0," {\r\n"],[-1,"\t\t\tvar images = new app.Collections.Images();\r\n\t\t\tapp.newOrder = app.newO"],[1,"            var o"],[0,"rder "],[-1,"||"],[1,"="],[0," new"]],"start1":11444,"start2":11444,"length1":88,"length2":31},{"diffs":[[0,"der("],[-1,");\r\n\t\t\tapp.newOrderView ="],[1,"{user: Parse.User.current()});\r\n           "],[0," app"]],"start1":11489,"start2":11489,"length1":33,"length2":51},{"diffs":[[0,"newOrder"],[1,"Details"],[0,"View "],[-1,"||"],[1,"="],[0," new app"]],"start1":11541,"start2":11541,"length1":23,"length2":29},{"diffs":[[0,"rder"],[1,"Details"],[0,"View({\r\n"],[-1,"\t\t\t\tmodel: app.newOrder\r\n\t\t\t\t,images: images\r\n\t\t\t"],[1,"                model: order\r\n                ,images: new app.Collections.Images()\r\n            "],[0,"})"],[-1,";"],[0,"\r\n"],[-1,"\t\t\tthis.renderView(app.newOrderView);\r\n\t\t}\r\n\t\t,address: function() {\r\n\t\t\tapp.geocoder = app."],[1,"            app.newOrderAddressView = new app.Views.NewOrderAddressView({\r\n                model: order\r\n                ,"],[0,"geocoder"],[-1," ||"],[1,":"],[0," new"]],"start1":11581,"start2":11581,"length1":173,"length2":255},{"diffs":[[0,"er()"],[-1,";"],[0,"\r\n"],[-1,"\t\t\tapp.address"],[1,"                ,map"],[0,"View"],[-1," ="],[1,":"],[0," app."],[-1,"addressView || new app.Views.AddressView({\r\n\t\t\t\tmapView: app.mapView\r\n\t\t\t\t,geocoder: app.geocoder\r\n\t\t\t\t,model: app.newOrder\r\n\t\t\t});\r\n\t\t\tthis.renderView(app.addressView); // TODO: If you view this page, then leave, then come back, address is erased\r\n\t\t\tapp.mapView.render(); // Must be done after element is created in DOM\r\n\t\t}\r\n\t\t,upload: function() {\r\n\t\t\tapp.uploadView = app.uploadView || new app.Views.UploadView();\r\n\t\t\tthis.renderView(app.uploadView);\r\n\t\t"],[1,"mapView // Maybe I don't need to pass this\r\n            });\r\n            this.newOrderDetails();\r\n        }\r\n        ,newOrderDetails: function() {\r\n            this.showView(app.newOrderDetailsView);\r\n        }\r\n        ,newOrderAddress: function() {\r\n            this.showView(app.newOrderAddressView);\r\n            app.mapView.render(); // Must be done after element is created in DOM\r\n        "],[0,"}\r\n\t"]],"start1":11854,"start2":11854,"length1":495,"length2":437},{"diffs":[[0,"fetch();"],[1," // TODO: Doesn't get triggered if you started at #new and added one to the collection"],[0,"\r\n\t\t\tapp"]],"start1":12436,"start2":12436,"length1":16,"length2":102},{"diffs":[[0,"ers});\r\n\t\t\tthis."],[-1,"render"],[1,"show"],[0,"View(app.myOrder"]],"start1":12623,"start2":12623,"length1":38,"length2":36},{"diffs":[[0,"\t\t\tthis."],[-1,"render"],[1,"show"],[0,"View(app"]],"start1":12822,"start2":12822,"length1":22,"length2":20},{"diffs":[[0,"\t}\r\n"],[-1,"\t});\r\n\t\r\n\t$(document).ready(function() {\r\n\t"],[1,"        ,showView: function(view) {\r\n            if(this.currentView) {\r\n                this.currentView.$el.detach(); // Detach it so we don't kill the events on the view\r\n            }\r\n            $(\"#app-main\").empty().append(view.render().el);\r\n            this.currentView = view;\r\n        }\r\n\t});\r\n\t\r\n\t/**\r\n\t * Executed Immediately\r\n\t */\r\n"],[0,"\tapp"]],"start1":13010,"start2":13010,"length1":51,"length2":355},{"diffs":[[0,"ter();\r\n"],[-1,"\t"],[0,"\tBackbon"]],"start1":13397,"start2":13397,"length1":17,"length2":16},{"diffs":[[0,"art();\r\n"],[-1,"\t"],[0,"\t$(\"body"]],"start1":13425,"start2":13425,"length1":17,"length2":16},{"diffs":[[0,"ss bar\r\n"],[-1,"\t});\r\n"],[0,"\t\r\n\t/**\r"]],"start1":13501,"start2":13501,"length1":22,"length2":16},{"diffs":[[0,"\n\t\r\n"],[-1,"\t/**\r\n\t * Executed Immediately\r\n\t */\r\n\tapp.mapView = new app.Views.MapView(); // So it will start locating\r\n"],[0,"})(G"]],"start1":14248,"start2":14248,"length1":116,"length2":8},{"diffs":[[0,"il, "],[-1,"Zepto"],[1,"jQuery"],[0,");"]],"start1":14262,"start2":14262,"length1":11,"length2":12}]],"length":14274,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358542932859,"patch":[[{"diffs":[[0,"ss bar\r\n"],[1,"    $(\".segmented-controller a\").live(\"click\", function(e) {\r\n        e.preventDefault();\r\n        $(this).siblings().removeClass(\"active\");\r\n        $(this).toggleClass(\"active\");\r\n    })\r\n"],[0,"\t\r\n\t/**\r"]],"start1":13501,"start2":13501,"length1":16,"length2":206}]],"length":14464,"saved":false}
{"ts":1358542975475,"patch":[[{"diffs":[[0,"lings()."],[1,"each(function() { $(this).parent()."],[0,"removeCl"]],"start1":13619,"start2":13619,"length1":16,"length2":51},{"diffs":[[0,"ss(\"active\")"],[1," })"],[0,";\r\n        $"]],"start1":13671,"start2":13671,"length1":24,"length2":27},{"diffs":[[0,"$(this)."],[1,"parent()."],[0,"toggleCl"]],"start1":13697,"start2":13697,"length1":16,"length2":25}]],"length":14511,"saved":false}
{"ts":1358543029846,"patch":[[{"diffs":[[0,"active\")"],[1,"; console.log(\"Removed\");"],[0," });\r\n  "]],"start1":13675,"start2":13675,"length1":16,"length2":41}]],"length":14536,"saved":false}
{"ts":1358543076011,"patch":[[{"diffs":[[0,"    "],[-1," $(this).siblings().each(function() {"],[0," $(t"]],"start1":13603,"start2":13603,"length1":45,"length2":8},{"diffs":[[0,"arent()."],[-1,"remov"],[1,"toggl"],[0,"eClass(\""]],"start1":13617,"start2":13617,"length1":21,"length2":21},{"diffs":[[0,"ve\")"],[-1,"; console.log(\"Removed\"); });\r\n        $(this).parent().toggl"],[1,".siblings().remov"],[0,"eCla"]],"start1":13642,"start2":13642,"length1":69,"length2":25}]],"length":14455,"saved":false}
{"ts":1358543112696,"patch":[[{"diffs":[[0,"ss bar\r\n"],[1,"    \r\n    // Segmented controller switcher\r\n"],[0,"    $(\"."]],"start1":13501,"start2":13501,"length1":16,"length2":60}]],"length":14499,"saved":false}
{"ts":1358543251992,"patch":[[{"diffs":[[0,"photo;\r\n"],[1,"            formData[\"hittype\"] = this.$(\"[name='hittype'] .active a\")[0].text() || null;\r\n"],[0,"\t\t\tthis."]],"start1":7261,"start2":7261,"length1":16,"length2":107}]],"length":14590,"saved":false}
{"ts":1358544735086,"patch":[[{"diffs":[[0,"tive a\")"],[-1,"[0]"],[1,"eq(0)"],[0,".text() "]],"start1":7331,"start2":7331,"length1":19,"length2":21}]],"length":14592,"saved":false}
{"ts":1358544738191,"patch":[[{"diffs":[[0,"tive a\")"],[1,"."],[0,"eq(0).te"]],"start1":7331,"start2":7331,"length1":16,"length2":17}]],"length":14593,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358638426410,"patch":[[{"diffs":[[0,"\r\n    })"],[1,";"],[0,"\r\n\t\r\n\t/*"]],"start1":13818,"start2":13818,"length1":16,"length2":17}]],"length":14594,"saved":false}
{"ts":1358638459756,"patch":[[{"diffs":[[0,"switcher"],[1," // TODO: This doesn't seem to be working on iOS"],[0,"\r\n    $("]],"start1":13637,"start2":13637,"length1":16,"length2":64}]],"length":14642,"saved":false}
{"ts":1358638664022,"patch":[[{"diffs":[[0,"llection"],[1," - Also, if you refresh on #my, it calls this twice due to initialize()"],[0,"\r\n\t\t\tapp"]],"start1":12616,"start2":12616,"length1":16,"length2":87}]],"length":14713,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358805065632,"patch":[[{"diffs":[[0,"tion"],[-1," - Also, if you refresh on #my, it calls this twice due to initialize()"],[0,"\r\n\t\t"]],"start1":12620,"start2":12620,"length1":79,"length2":8}]],"length":14642,"saved":false}
{"ts":1358805374191,"patch":[[{"diffs":[[0,"eset\", this."],[-1,"render"],[1,"onReset, this"],[0,");\r\n\t\t\tthis."]],"start1":4869,"start2":4869,"length1":30,"length2":37},{"diffs":[[0,"der);\r\n\t\t}\r\n"],[-1,"\t"],[1,"    "],[0,"\t,onAdd: fun"]],"start1":4998,"start2":4998,"length1":25,"length2":28},{"diffs":[[0,"r(); }\r\n"],[1,"    \t,onReset: function() { console.log(\"onReset()\"); this.render(); }\r\n"],[0,"\t\t,rende"]],"start1":5070,"start2":5070,"length1":16,"length2":88}]],"length":14724,"saved":false}
{"ts":1358805414163,"patch":[[{"diffs":[[0,"his."],[-1,"onReset, this"],[1,"render"],[0,");\r\n"]],"start1":4877,"start2":4877,"length1":21,"length2":14},{"diffs":[[0,"his."],[-1,"onAdd, this"],[1,"render"],[0,");\r\n"]],"start1":4921,"start2":4921,"length1":19,"length2":14},{"diffs":[[0,"\t}\r\n"],[-1,"    \t,onAdd: function() { console.log(\"onAdd()\"); this.render(); }\r\n    \t,onReset: function() { console.log(\"onReset()\"); this.render(); }\r\n"],[0,"\t\t,r"]],"start1":4994,"start2":4994,"length1":148,"length2":8}]],"length":14572,"saved":false}
{"ts":1358805786197,"patch":[[{"diffs":[[0,";\r\n\t\t}\r\n"],[1,"        ,fetch: function(options) {\r\n            console.log(\"Fetch args\", arguments);\r\n            this.constructor.__super__.fetch.apply(this, arguments);\r\n        }\r\n"],[0,"\t\t,query"]],"start1":3836,"start2":3836,"length1":16,"length2":185},{"diffs":[[0," this.render);\r\n"],[1,"            // TODO: Do the fetch here so you can add loading indicator\r\n"],[0,"\t\t}\r\n\t\t,render: "]],"start1":5146,"start2":5146,"length1":32,"length2":105}]],"length":14814,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358805844523,"patch":[[{"diffs":[[0,"    "],[-1,"this.constructor.__super__.fetch.apply(this, argument"],[1,"Parse.Collection.prototype.fetch(option"],[0,"s);\r"]],"start1":3940,"start2":3940,"length1":61,"length2":47}]],"length":14800,"saved":false}
{"ts":1358805892128,"patch":[[{"diffs":[[0,"ototype."],[-1,"fetch("],[1,"call(this, "],[0,"options)"]],"start1":3963,"start2":3963,"length1":22,"length2":27}]],"length":14805,"saved":false}
{"ts":1358805904176,"patch":[[{"diffs":[[0,"ototype."],[1,"fetch."],[0,"call(thi"]],"start1":3963,"start2":3963,"length1":16,"length2":22}]],"length":14811,"saved":false}
{"ts":1358805915790,"patch":[[{"diffs":[[0,"s\", "],[-1,"argument"],[1,"option"],[0,"s);\r"]],"start1":3915,"start2":3915,"length1":16,"length2":14}]],"length":14809,"saved":false}
{"ts":1358806066303,"patch":[[{"diffs":[[0,"tch "],[-1,"args\", options)"],[1,"Start\");\r\n            options.success = function(model) { console.log(\"success\"); if(options.success !== undefined) options.success(model); }"],[0,";\r\n "]],"start1":3908,"start2":3908,"length1":23,"length2":149}]],"length":14935,"saved":false}
{"ts":1358806090977,"patch":[[{"diffs":[[0,"h Start\");\r\n"],[1,"            options = options || {};\r\n"],[0,"            "]],"start1":3910,"start2":3910,"length1":24,"length2":62}]],"length":14973,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358806136100,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"options = op"]],"start1":3922,"start2":3922,"length1":24,"length2":26},{"diffs":[[0,"        "],[1,"//"],[0,"options."]],"start1":3966,"start2":3966,"length1":16,"length2":18},{"diffs":[[0,"del); };"],[1," // Does a killing loop"],[0,"\r\n      "]],"start1":4088,"start2":4088,"length1":16,"length2":39}]],"length":15000,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359556801034,"patch":[[{"diffs":[[0,"etch"],[-1,".call"],[0,"(thi"]],"start1":4161,"start2":4161,"length1":13,"length2":8}]],"length":14995,"saved":false}
{"ts":1359556805618,"patch":[[{"diffs":[[0,"e.fetch("],[-1,"this, "],[0,"options)"]],"start1":4158,"start2":4158,"length1":22,"length2":16}]],"length":14989,"saved":false}
{"ts":1359557637280,"patch":[[{"diffs":[[0,"s.render);\r\n"],[1,"            this.collection.on(\"request\", function(){util.loading(true)});\r\n            this.collection.on(\"sync\", function(){util.loading(false)}); // Also on \"error\"\r\n"],[0,"            "]],"start1":5325,"start2":5325,"length1":24,"length2":193}]],"length":15158,"saved":false}
{"ts":1359557653010,"patch":[[{"diffs":[[0,"\t}\r\n"],[-1,"        ,fetch: function(options) {\r\n            console.log(\"Fetch Start\");\r\n            //options = options || {};\r\n            //options.success = function(model) { console.log(\"success\"); if(options.success !== undefined) options.success(model); }; // Does a killing loop\r\n            Parse.Collection.prototype.fetch(options);\r\n        }\r\n"],[0,"\t\t,q"]],"start1":3840,"start2":3840,"length1":352,"length2":8}]],"length":14814,"saved":false}
{"ts":1359558299196,"patch":[[{"diffs":[[0,"\n\t\t}\r\n\t\t"],[1,"/*"],[0,",before:"]],"start1":11103,"start2":11103,"length1":16,"length2":18},{"diffs":[[0,"}\r\n\t\t\t}\r\n\t\t}"],[1,"*/\r\n        ,before: function(param, route) {\r\n            if(route !== \"login\" && ! Parse.User.current()) {\r\n                this.navigate(\"login\", {trigger: true, replace: true});\r\n                return false;\r\n            }\r\n        }"],[0,"\r\n\t\t,home: f"]],"start1":11342,"start2":11342,"length1":24,"length2":262}]],"length":15054,"saved":false}
{"ts":1359558438337,"patch":[[{"diffs":[[0,"icator\r\n"],[1,"            this.collection.fetch();\r\n"],[0,"\t\t}\r\n\t\t,"]],"start1":5227,"start2":5227,"length1":16,"length2":54},{"diffs":[[0,"();\r\n\t\t\t"],[1,"//"],[0,"if( ! ap"]],"start1":12932,"start2":12932,"length1":16,"length2":18}]],"length":15094,"saved":false}
{"ts":1359558524136,"patch":[[{"diffs":[[0,"st\", function(){"],[1,"console.log(\"request\"); "],[0,"util.loading(tru"]],"start1":5030,"start2":5030,"length1":32,"length2":56}]],"length":15118,"saved":false}
{"ts":1359558672668,"patch":[[{"diffs":[[0,"ction(){"],[1,"console.log(\"sync\"); "],[0,"util.loa"]],"start1":5135,"start2":5135,"length1":16,"length2":37}]],"length":15139,"saved":false}
{"ts":1359559455339,"patch":[[{"diffs":[[0,"t\");"],[-1," util.loading(true)"],[0,"});\r"]],"start1":5065,"start2":5065,"length1":27,"length2":8}]],"length":15120,"saved":false}
{"ts":1359561636794,"patch":[[{"diffs":[[0,"    "],[-1,"this.collection.on(\"request\", function(){console.log(\"request\");});\r\n            this.collection.on(\"sync\", function(){console.log(\"sync\"); util.loading(false)}); // Also on \"error\"\r\n            // TODO: Do the fetch here so you can add loading indicator\r\n            this.collection.fetch("],[1,"// TODO: Do the fetch here so you can add loading indicator\r\n            util.loading(true);\r\n            this.collection.fetch({\r\n                success: function() { util.loading(false); }\r\n                ,error: function() { util.loading(false); }\r\n            }"],[0,");\r\n"]],"start1":5001,"start2":5001,"length1":298,"length2":275},{"diffs":[[0,"ventDefault();\r\n"],[1,"            util.loading(true);\r\n"],[0,"\t\t\tthis.collecti"]],"start1":5615,"start2":5615,"length1":32,"length2":65},{"diffs":[[0,"ch({"],[-1,"add: true"],[1,"\r\n                add: true\r\n                ,success: function() { util.loading(false); }\r\n                ,error: function() { util.loading(false); }\r\n            "],[0,"});\r"]],"start1":5697,"start2":5697,"length1":17,"length2":173}]],"length":15286,"saved":false}
